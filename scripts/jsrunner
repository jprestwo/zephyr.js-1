#!/usr/bin/env python3

# Copyright (c) 2016, Intel Corporation.
# Author: Geoff Gustafson <geoff@linux.intel.com>

# jsrunner jsfile [cfile] will create a C file that executes the given
#   JavaScript file in JerryScript, by converting it to a C string in source.

import argparse
import os
import shutil
import subprocess
import sys

def jprint(arg):
    print('jsrunner: %s' % arg)

if __name__ == "__main__":
    # parse command line arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('-b', metavar='BOARDNAME', default='placeholder',
                        help='override board name (default: arduino_101_factory)')
    parser.add_argument('-c', action='store_true',
                        help='clean build, recreating build dir from scratch')
    parser.add_argument('-j', action='store_true',
                        help='flash with JTAG instead of dfu-util')
    parser.add_argument('-n', action='store_true',
                        help='skip flashing, but still build')
    parser.add_argument('-s', action='store_true',
                        help='skip building and flashing')
    parser.add_argument('-r', action='store_true',
                        help='run after build (qemu build only)')
    parser.add_argument('jsfile', help='JavaScript input file')
    args = parser.parse_args()

    if not os.path.isfile(args.jsfile):
        jprint("error: jsfile argument '%s' must specify a JavaScript file" %
               args.jsfile)
        sys.exit(1)

    jsfile = os.path.abspath(args.jsfile)

    try:
        BASEDIR = os.environ['ZJS_BASE']
    except KeyError:
        jprint("error: ZJS_BASE not set, source the zjs-env.sh file!")
        sys.exit(1)

    os.chdir(BASEDIR)
    if args.c:
        rval = subprocess.call(['make', 'clean'])

    if not args.s:
        if args.b == "placeholder":
            board = 'BOARD=arduino_101_factory'

            partsize = os.getenv('ZJS_PARTITION')
            if partsize == '216' or partsize == '256':
                board += '_' + partsize
        else:
            board = 'BOARD=%s' % args.b

        print("BOARD:", board)

        print("Building OS image...\n")
        if board == "BOARD=qemu_x86":
            rval = subprocess.call(['make', board, "qemu",
                                    'JS=%s' % jsfile])
            sys.exit(rval)
        else:
            rval = subprocess.call(['make', 'zephyr', board,
                                    'JS=%s' % jsfile])
        if rval:
            sys.exit(rval)

        if not args.n:
            print("\nPut the device in DFU mode by resetting, if needed.")
            input("Press Enter to begin flashing OS image with dfu-util...")

            print("Flashing OS image...");
            BINFILE = os.path.join(BASEDIR, 'outdir', board, 'zephyr.bin')
            rval = subprocess.call(['dfu-util', '-a', 'x86_app', '-D',
                                    BINFILE])
            if rval:
                sys.exit(rval)
