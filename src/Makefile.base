JERRY_BASE ?= $(ZJS_BASE)/deps/jerryscript
OCF_ROOT ?= deps/iotivity-constrained

# TODO: iotivity-constrained uses legacy functions so the -Werror flag has to
#       be removed in order for it to compile. Once iotivity-constrained has
#       been updated to use the unified kernel API's -Werror can be added back
ccflags-y += -Wall

# Select extended ANSI C/POSIX function set in recent Newlib versions
ccflags-y += -D_XOPEN_SOURCE=700

ccflags-y += -I$(JERRY_BASE)/jerry-core
ccflags-y += -I$(ZEPHYR_BASE)/drivers
ccflags-y += -I${ZEPHYR_BASE}/net/ip
ccflags-y += -I${ZEPHYR_BASE}/samples/bluetooth/
ccflags-y += -I${ZEPHYR_BASE}/net/ip/contiki
ccflags-y += -I${ZEPHYR_BASE}/net/ip/contiki/os/lib
ccflags-y += -I${ZEPHYR_BASE}/net/ip/contiki/os
ccflags-y += -I$(ZJS_BASE)/outdir/include

ifeq ($(VARIANT), debug)
ccflags-y += -DDEBUG_BUILD
ccflags-y += -g
endif

ifeq ($(BOARD), qemu_x86)
ccflags-y += -DQEMU_BUILD
endif

ifeq ($(CB_STATS), on)
ccflags-y += -DZJS_PRINT_CALLBACK_STATS
endif

ifeq ($(PRINT_FLOAT), on)
export LDFLAGS += -u _printf_float
ccflags-y += -DZJS_PRINT_FLOATS
endif

obj-y += main.o \
         zjs_callbacks.o \
         zjs_common.o \
         zjs_modules.o \
         zjs_promise.o \
         zjs_script.o \
         zjs_timers.o \
         zjs_util.o

obj-$(ZJS_BUFFER) += zjs_buffer.o
obj-$(ZJS_CONSOLE) += zjs_console.o
obj-$(ZJS_EVENTS) += zjs_event.o
obj-$(ZJS_GPIO) += zjs_gpio.o
obj-$(ZJS_BLE) += zjs_ble.o
obj-$(ZJS_PWM) += zjs_pwm.o
obj-$(ZJS_PERFORMANCE) += zjs_performance.o
obj-$(ZJS_UART) += zjs_uart.o
obj-$(ZJS_UDP) += zjs_udp.o
obj-$(ZJS_OCF) += zjs_ocf_client.o \
                  zjs_ocf_server.o \
                  zjs_ocf_common.o

ifeq ($(SNAPSHOT), on)
obj-y += zjs_snapshot_gen.o
else
obj-y += zjs_script_gen.o
endif

# skip for now for frdm_k64f
ifeq ($(BOARD), arduino_101)
	obj-$(ZJS_AIO) += zjs_aio.o
	obj-$(ZJS_GROVE_LCD) += zjs_grove_lcd_ipm.o
	obj-$(ZJS_I2C) += zjs_i2c_ipm.o
	obj-$(ZJS_SENSOR) += zjs_sensor.o
else
	obj-$(ZJS_GROVE_LCD) += zjs_grove_lcd.o
	obj-$(ZJS_I2C) += zjs_i2c.o
endif

obj-$(CONFIG_BOARD_ARDUINO_101) += \
	zjs_a101_pins.o \
	zjs_ipm.o

obj-$(CONFIG_BOARD_FRDM_K64F) += \
	zjs_k64f_pins.o

ifeq ($(DEV), ashell)
$(info Insecure Mode (development))
export JERRY_INCLUDE = $(JERRY_BASE)/jerry-core/
obj-y += ashell/
endif
